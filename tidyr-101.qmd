---
title: "Tidyr 101"
format: html
---

```{r}
library(ggplot2)
library(vroom)
library(here)
library(dplyr)
library(tidyr)
```

### Long to wide table (pivoting)
```{r}
color_given_cut <-
diamonds |> 
  group_by(cut, color) |>
  summarise(N=n(), .groups= "drop_last")|>
  mutate(prob=N/sum(N)) |>
  ungroup()
```

```{r}
color_given_cut |>
  select(!N) |>
  pivot_wider(id_cols = cut, 
              names_from=color, 
              values_from= prob)
```
G tends to be more frequent in the ideal cut. Cut is the idea column because it gives the description of the object in the row. 
```{r}
color_given_cut |>
  select(!N) |>
  slice_sample(n=30)|>
  pivot_wider(names_from=color, 
              values_from= prob)
```
### Wide to long table (pivoting)
```{r}
data("world_bank_pop")
```

```{r}
world_bank_pop |>
  filter(indicator== "SP.POP.TOTL") |>
  select(!indicator) |>
  pivot_longer(!country)
```

```{r}
world_bank_pop |>
  filter(indicator== "SP.POP.TOTL") |>
  select(!indicator) |>
  pivot_longer(!country) |>
  ggplot(aes(x=name, y=value, color= country))+
  geom_point()+
  theme(legend.position= "none")
```

```{r}
world_bank_pop |>
  filter(indicator == "SP.POP.TOTL") |>
  filter(country %in% c("ESP", "FRA"))|>
  select(!indicator)
```

Pivot will bring into a configuriation in column that will work with ggplot.
```{r}
world_bank_pop |>
  filter(indicator == "SP.POP.TOTL") |>
  filter(country %in% c("ESP", "FRA"))|>
  select(!indicator)|>
  pivot_longer(!country)
```

```{r}
world_bank_pop |>
  filter(country %in% c("ESP", "FRA"))|>
  pivot_longer(!country & !indicator)
```

```{r}
world_bank_pop |>
  filter(indicator== "SP.POP.TOTL") |>
  select(!indicator) |>
  pivot_longer(!country, 
               names_to = "year",
               names_transform = as.integer,
               values_to = "total population") |>
  filter(country== "ESP") |>
  ggplot(aes(x=year, y=`total population`))+
  geom_line()
```
```{r}
world_bank_pop |>
  filter(indicator== "SP.POP.TOTL") |>
  select(!indicator) |>
  pivot_longer(!country, 
               names_to = "year",
               names_transform = as.integer,
               values_to = "total population") |>
  ggplot(aes(x=year, y=`total population`, color=country))+
  geom_line()+
  theme(legend.position= "none")+
  scale_y_continuous(transform= "log10")
```
```{r}
set.seed(42)
world_bank_pop |>
  filter(indicator== "SP.POP.TOTL") |>
  select(!indicator) |>
  filter(is.na(`2000`))|>
  slice_sample(n=10, weight_by = `2000`)|>
  pivot_longer(!country, 
               names_to = "year",
               names_transform = as.integer,
               values_to = "total population") |>
  ggplot(aes(x=year, y=`total population`, color=country))+
  geom_line()+
  theme(legend.position= "right")+
  scale_y_continuous(transform= "log10")
```
If we sample after pivoting we are going to remove some elements. weight_by, weight in the sample, we will have big countries. set.seed will select the start of the random generator, so everytime we generates it will give us the same things. 
```{r}
set.seed(42)
world_bank_pop |>
  filter(indicator== "SP.POP.TOTL") |>
  select(!indicator) |>
  filter(is.na(`2000`))|>
  slice_sample(n=10, weight_by = 1/`2000`)|>
  pivot_longer(!country, 
               names_to = "year",
               names_transform = as.integer,
               values_to = "total population") |>
  ggplot(aes(x=year, y=`total population`, color=country))+
  geom_line()+
  theme(legend.position= "right")+
  scale_y_continuous(transform= "log10")
```